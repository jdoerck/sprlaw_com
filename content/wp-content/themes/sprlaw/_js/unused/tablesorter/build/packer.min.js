function pack(_script,_encoding,_fastDecode,_specialChars){var $IGNORE="$1";_script+="\n";_encoding=Math.min(parseInt(_encoding),95);function _pack($script){var i,$parse;for(i=0;($parse=_parsers[i]);i++){$script=$parse($script)}return $script}var _unpack=function($packed,$ascii,$count,$keywords,$encode,$decode){while($count--){if($keywords[$count]){$packed=$packed.replace(new RegExp("\\b"+$encode($count)+"\\b","g"),$keywords[$count])}}return $packed};var _decode=function(){if(!"".replace(/^/,String)){while($count--){$decode[$encode($count)]=$keywords[$count]||$encode($count)}$keywords=[function($encoded){return $decode[$encoded]}];$encode=function(){return"\\w+"};$count=1}};var _parsers=[];function _addParser($parser){_parsers[_parsers.length]=$parser}function _basicCompression($script){var $parser=new ParseMaster;$parser.escapeChar="\\";$parser.add(/'[^'\n\r]*'/,$IGNORE);$parser.add(/"[^"\n\r]*"/,$IGNORE);$parser.add(/\/\/[^\n\r]*[\n\r]/," ");$parser.add(/\/\*[^*]*\*+([^\/][^*]*\*+)*\//," ");$parser.add(/\s+(\/[^\/\n\r\*][^\/\n\r]*\/g?i?)/,"$2");$parser.add(/[^\w\x24\/'"*)\?:]\/[^\/\n\r\*][^\/\n\r]*\/g?i?/,$IGNORE);if(_specialChars){$parser.add(/;;;[^\n\r]+[\n\r]/)}$parser.add(/\(;;\)/,$IGNORE);$parser.add(/;+\s*([};])/,"$2");$script=$parser.exec($script);$parser.add(/(\b|\x24)\s+(\b|\x24)/,"$2 $3");$parser.add(/([+\-])\s+([+\-])/,"$2 $3");$parser.add(/\s+/,"");return $parser.exec($script)}function _encodeSpecialChars($script){var $parser=new ParseMaster;$parser.add(/((\x24+)([a-zA-Z$_]+))(\d*)/,function($match,$offset){var $length=$match[$offset+2].length;var $start=$length-Math.max($length-$match[$offset+3].length,0);return $match[$offset+1].substr($start,$length)+$match[$offset+4]});var $regexp=/\b_[A-Za-z\d]\w*/;var $keywords=_analyze($script,_globalize($regexp),_encodePrivate);var $encoded=$keywords.$encoded;$parser.add($regexp,function($match,$offset){return $encoded[$match[$offset]]});return $parser.exec($script)}function _encodeKeywords($script){if(_encoding>62){$script=_escape95($script)}var $parser=new ParseMaster;var $encode=_getEncoder(_encoding);var $regexp=(_encoding>62)?/\w\w+/:/\w+/;$keywords=_analyze($script,_globalize($regexp),$encode);var $encoded=$keywords.$encoded;$parser.add($regexp,function($match,$offset){return $encoded[$match[$offset]]});return $script&&_bootStrap($parser.exec($script),$keywords)}function _analyze($script,$regexp,$encode){var $all=$script.match($regexp);var $$sorted=[];var $$encoded={};var $$protected={};if($all){var $unsorted=[];var $protected={};var $values={};var $count={};var i=$all.length,j=0,$word;do{$word="$"+$all[--i];if(!$count[$word]){$count[$word]=0;$unsorted[j]=$word;$protected["$"+($values[j]=$encode(j))]=j++}$count[$word]++}while(i);i=$unsorted.length;do{$word=$unsorted[--i];if($protected[$word]!=null){$$sorted[$protected[$word]]=$word.slice(1);$$protected[$protected[$word]]=true;$count[$word]=0}}while(i);$unsorted.sort(function($match1,$match2){return $count[$match2]-$count[$match1]});j=0;do{if($$sorted[i]==null){$$sorted[i]=$unsorted[j++].slice(1)}$$encoded[$$sorted[i]]=$values[i]}while(++i<$unsorted.length)}return{$sorted:$$sorted,$encoded:$$encoded,$protected:$$protected}}function _bootStrap($packed,$keywords){var $ENCODE=_safeRegExp("$encode\\($count\\)","g");$packed="'"+_escape($packed)+"'";var $ascii=Math.min($keywords.$sorted.length,_encoding)||1;var $count=$keywords.$sorted.length;for(var i in $keywords.$protected){$keywords.$sorted[i]=""}$keywords="'"+$keywords.$sorted.join("|")+"'.split('|')";var $encode=_encoding>62?_encode95:_getEncoder($ascii);$encode=String($encode).replace(/_encoding/g,"$ascii").replace(/arguments\.callee/g,"$encode");var $inline="$count"+($ascii>10?".toString($ascii)":"");if(_fastDecode){var $decode=_getFunctionBody(_decode);if(_encoding>62){$decode=$decode.replace(/\\\\w/g,"[\\xa1-\\xff]")}else{if($ascii<36){$decode=$decode.replace($ENCODE,$inline)}}if(!$count){$decode=$decode.replace(_safeRegExp("($count)\\s*=\\s*1"),"$1=0")}}var $unpack=String(_unpack);if(_fastDecode){$unpack=$unpack.replace(/\{/,"{"+$decode+";")}$unpack=$unpack.replace(/"/g,"'");if(_encoding>62){$unpack=$unpack.replace(/'\\\\b'\s*\+|\+\s*'\\\\b'/g,"")}if($ascii>36||_encoding>62||_fastDecode){$unpack=$unpack.replace(/\{/,"{$encode="+$encode+";")}else{$unpack=$unpack.replace($ENCODE,$inline)}$unpack=pack($unpack,0,false,true);var $params=[$packed,$ascii,$count,$keywords];if(_fastDecode){$params=$params.concat(0,"{}")}return"eval("+$unpack+"("+$params+"))\n"}function _getEncoder($ascii){return $ascii>10?$ascii>36?$ascii>62?_encode95:_encode62:_encode36:_encode10}var _encode10=function($charCode){return $charCode};var _encode36=function($charCode){return $charCode.toString(36)};var _encode62=function($charCode){return($charCode<_encoding?"":arguments.callee(parseInt($charCode/_encoding)))+(($charCode=$charCode%_encoding)>35?String.fromCharCode($charCode+29):$charCode.toString(36))};var _encode95=function($charCode){return($charCode<_encoding?"":arguments.callee($charCode/_encoding))+String.fromCharCode($charCode%_encoding+161)};var _encodePrivate=function($charCode){return"_"+$charCode};function _escape($script){return $script.replace(/([\\'])/g,"\\$1")}function _escape95($script){return $script.replace(/[\xa1-\xff]/g,function($match){return"\\x"+$match.charCodeAt(0).toString(16)})}function _safeRegExp($string,$flags){return new RegExp($string.replace(/\$/g,"\\$"),$flags)}function _getFunctionBody($function){with(String($function)){return slice(indexOf("{")+1,lastIndexOf("}"))}}function _globalize($regexp){return new RegExp(String($regexp).slice(1,-1),"g")}_addParser(_basicCompression);if(_specialChars){_addParser(_encodeSpecialChars)}if(_encoding){_addParser(_encodeKeywords)}return _pack(_script)};